#!/usr/bin/env bash
# List of options
options=(
	"chatgpt"
	"claude"
	"deepseek"
	"github"
	"google search"
	"grok"
	"home-manager options"
	"nh search"
	"nixpkgs search"
	"perplexity"
	"pypi"
	"youtube"
)
# Prompt the user to pick an option using rofi
choice=$(printf "%s\n" "${options[@]}" | rofi -dmenu -p "Choose an action")
# Exit if no choice was made
[ -z "$choice" ] && exit 1
# Function to open a URL in the default browser
open_browser() {
	xdg-open "$1" &>/dev/null &
	hyprctl dispatch workspace 2
}
# Handle each choice
case "$choice" in
"chatgpt")
	open_browser "https://chat.openai.com/"
	;;
"google search")
	query=$(rofi -dmenu -p "Enter Google query")
	[ -z "$query" ] || open_browser "https://www.google.com/search?q=$(printf "%s" "$query" | jq -sRr @uri)"
	;;
"nixpkgs search")
	query=$(rofi -dmenu -p "Enter nixpkgs query")
	[ -z "$query" ] || open_browser "https://search.nixos.org/packages?channel=24.11&from=0&size=50&sort=relevance&type=packages&query=$(printf "%s" "$query" | jq -sRr @uri)"
	;;
"pypi")
	query=$(rofi -dmenu -p "Enter PyPI query")
	[ -z "$query" ] || open_browser "https://pypi.org/search/?q=$(printf "%s" "$query" | jq -sRr @uri)"
	;;
"github")
	query=$(rofi -dmenu -p "Enter GitHub query")
	[ -z "$query" ] || open_browser "https://github.com/search?q=$(printf "%s" "$query" | jq -sRr @uri)&type=repositories"
	;;
"home-manager options")
	query=$(rofi -dmenu -p "Enter home-manager query")
	[ -z "$query" ] || open_browser "https://home-manager-options.extranix.com/?release=master&query=$(printf "%s" "$query" | jq -sRr @uri)"
	;;
"nh search")
	query=$(rofi -dmenu -p "Enter nh query")
	[ -z "$query" ] || wezterm start --always-new-process bash -c "nh '$query' | bat --paging=always"
	;;
"grok")
	open_browser "https://x.com/i/grok"
	;;
"claude")
	open_browser "https://claude.ai/new"
	;;
"deepseek")
	open_browser "https://chat.deepseek.com/"
	;;
"perplexity")
	open_browser "https://www.perplexity.ai/"
	;;
"youtube")
	query=$(rofi -dmenu -p "Enter YouTube search")
	[ -z "$query" ] || open_browser "https://www.youtube.com/results?search_query=$(printf "%s" "$query" | jq -sRr @uri)"
	;;
*)
	notify-send "Unknown choice: $choice"
	exit 1
	;;
esac
